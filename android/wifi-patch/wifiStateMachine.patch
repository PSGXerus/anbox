From e4aef97bcf7e01227e6a7438b486064e4a30596e Mon Sep 17 00:00:00 2001
From: Jan Siegmund <jsiegmun@hm.edu>
Date: Thu, 5 Mar 2020 02:24:24 +0100
Subject: [PATCH] WifiStateMachine: Disabled RSSI polling with wired wpa

Signed-off-by: Jan Siegmund <jsiegmun@hm.edu>
---
 .../android/server/wifi/WifiStateMachine.java | 41 +++++++++++--------
 1 file changed, 25 insertions(+), 16 deletions(-)

diff --git a/service/java/com/android/server/wifi/WifiStateMachine.java b/service/java/com/android/server/wifi/WifiStateMachine.java
index ed52a6ae8..4a9542556 100644
--- a/service/java/com/android/server/wifi/WifiStateMachine.java
+++ b/service/java/com/android/server/wifi/WifiStateMachine.java
@@ -86,6 +86,7 @@ import android.os.PowerManager;
 import android.os.Process;
 import android.os.RemoteException;
 import android.os.SystemClock;
+import android.os.SystemProperties;
 import android.os.UserHandle;
 import android.os.UserManager;
 import android.os.WorkSource;
@@ -226,6 +227,8 @@ public class WifiStateMachine extends StateMachine implements WifiNative.WifiRss
     private int mLastNetworkId; // The network Id we successfully joined
     private boolean linkDebouncing = false;
 
+    private boolean wpaWired = false;
+
     @Override
     public void onRssiThresholdBreached(byte curRssi) {
         if (DBG) {
@@ -3150,25 +3153,29 @@ public class WifiStateMachine extends StateMachine implements WifiNative.WifiRss
         Integer newLinkSpeed = null;
         Integer newFrequency = null;
 
-        String signalPoll = mWifiNative.signalPoll();
-
-        if (signalPoll != null) {
-            String[] lines = signalPoll.split("\n");
-            for (String line : lines) {
-                String[] prop = line.split("=");
-                if (prop.length < 2) continue;
-                try {
-                    if (prop[0].equals("RSSI")) {
-                        newRssi = Integer.parseInt(prop[1]);
-                    } else if (prop[0].equals("LINKSPEED")) {
-                        newLinkSpeed = Integer.parseInt(prop[1]);
-                    } else if (prop[0].equals("FREQUENCY")) {
-                        newFrequency = Integer.parseInt(prop[1]);
+        if(!wpaWired) {
+            String signalPoll = mWifiNative.signalPoll();
+
+            if (signalPoll != null) {
+                String[] lines = signalPoll.split("\n");
+                for (String line : lines) {
+                    String[] prop = line.split("=");
+                    if (prop.length < 2) continue;
+                    try {
+                        if (prop[0].equals("RSSI")) {
+                            newRssi = Integer.parseInt(prop[1]);
+                        } else if (prop[0].equals("LINKSPEED")) {
+                            newLinkSpeed = Integer.parseInt(prop[1]);
+                        } else if (prop[0].equals("FREQUENCY")) {
+                            newFrequency = Integer.parseInt(prop[1]);
+                        }
+                    } catch (NumberFormatException e) {
+                        //Ignore, defaults on rssi and linkspeed are assigned
                     }
-                } catch (NumberFormatException e) {
-                    //Ignore, defaults on rssi and linkspeed are assigned
                 }
             }
+        } else {
+            newRssi = WifiInfo.MAX_RSSI-1;
         }
 
         if (DBG) {
@@ -4300,6 +4307,8 @@ public class WifiStateMachine extends StateMachine implements WifiNative.WifiRss
                 mWifiApConfigStore =
                         mFacade.makeApConfigStore(mContext, mBackupManagerProxy);
             }
+
+            wpaWired = SystemProperties.get("wifi.wpa.driver").equals("wired");
         }
         @Override
         public boolean processMessage(Message message) {
-- 
2.17.1

